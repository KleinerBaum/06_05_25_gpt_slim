# pages/tech_overview.py
"""Streamlit-Seite: Technologischer √úberblick

Stellt die genutzte Architektur, Libraries und Tools dar ‚Äì mit Sprachumschalter und Zielgruppenumschalter
(Tech-affin vs. nicht tech-affin)."""

import streamlit as st

# ---------------------------------------------------------------------------
# Sprach- und Zielgruppenumschalter
# ---------------------------------------------------------------------------
lang = st.radio("üåê Sprache / Language", ("Deutsch", "English"), horizontal=True)
audience = st.radio(
    "üéØ Zielgruppe / Audience",
    ("Tech-interessiert", "Allgemein verst√§ndlich") if lang == "Deutsch" else ("Tech-savvy", "General public"),
    horizontal=True
)

# ---------------------------------------------------------------------------
# Inhalte (DE & EN, je nach Zielgruppe)
# ---------------------------------------------------------------------------
technology_info = {
    "Deutsch": {
        "Tech-interessiert": [
            ("Streamlit", "Framework f√ºr Python-basierte Web-Apps mit minimalem Overhead. Optimal f√ºr schnelle Prototypen und datengetriebene Interfaces."),
            ("Python 3.11", "Verl√§ssliche Programmiersprache mit modernen Features (z.B. Pattern Matching, AsyncIO Verbesserungen)."),
            ("OpenAI API (GPT-4)", "Berechnung von Textanalysen, Embedding-Matching und dynamischen Antworten auf Nutzeranfragen."),
            ("FAISS + Langchain", "Vektorindizierte semantische Suche √ºber ESCO Skills, Aufgaben und Branchendaten."),
            ("pypdf, docx2txt", "Extraktion und Parsing von Dokumenteninhalt f√ºr strukturierten Session-State-Aufbau."),
            ("st.session_state", "Effiziente Persistenz von Nutzerinteraktionen, extrahierten Daten und Flow-Steuerung."),
            ("ESCO API", "Ontologie-basierte Zuordnung von F√§higkeiten, Berufen und Spezialisierungen gem√§√ü EU-Standards."),
            ("Tailwind CSS (geplant)", "Utility-First CSS Framework f√ºr konsistente und wartbare Designs in zuk√ºnftigen Erweiterungen."),
            ("Markdown/PDF Export", "Transformation von Session-Daten in formatierte, druckf√§hige Outputs (Anforderungsprofile, Sourcing-Reports)."),
            ("i18n √ºber Dictionaries", "Interne, skalierbare L√∂sung f√ºr Internationalisierung ohne externe Abh√§ngigkeiten."),
        ],
        "Allgemein verst√§ndlich": [
            ("Streamlit", "Werkzeug, um sehr einfach moderne Webseiten f√ºr Analysen zu erstellen."),
            ("Python 3.11", "Eine vielseitige Computersprache, beliebt f√ºr KI- und Datenprojekte."),
            ("OpenAI API (GPT-4)", "K√ºnstliche Intelligenz hilft, Texte zu verstehen, Empfehlungen zu geben und Fragen dynamisch zu beantworten."),
            ("FAISS + Langchain", "Intelligente Suche, um passende F√§higkeiten und Aufgaben schneller zu finden."),
            ("pypdf, docx2txt", "Dateien (wie PDFs) werden automatisch ausgelesen, um Informationen weiterzuverwenden."),
            ("st.session_state", "Sorgt daf√ºr, dass bereits eingegebene Daten w√§hrend des gesamten Prozesses erhalten bleiben."),
            ("ESCO API", "Datenbank f√ºr europaweit anerkannte Berufe und Kompetenzen."),
            ("Tailwind CSS (geplant)", "Sorgt k√ºnftig f√ºr noch sch√∂nere und einheitlichere Designs."),
            ("Markdown/PDF Export", "Erlaubt es, Ergebnisse einfach als √ºbersichtliche Dateien herunterzuladen."),
            ("i18n √ºber Dictionaries", "Umschalten zwischen Deutsch und Englisch ‚Äì ohne Ladezeiten."),
        ],
    },
    "English": {
        "Tech-savvy": [
            ("Streamlit", "Python-native web app framework with minimal overhead. Excellent for rapid prototypes and data-driven interfaces."),
            ("Python 3.11", "Reliable modern programming language featuring pattern matching, improved async IO, etc."),
            ("OpenAI API (GPT-4)", "Handles semantic text analysis, embedding matching, and dynamic conversation responses."),
            ("FAISS + Langchain", "Vector-based semantic search over skills, tasks, and industry data."),
            ("pypdf, docx2txt", "Document extraction and parsing modules for structured session state construction."),
            ("st.session_state", "Efficient storage for user interactions, parsed data, and dynamic flow control."),
            ("ESCO API", "Ontology-driven job and skill mapping compliant with European standards."),
            ("Tailwind CSS (planned)", "Utility-first CSS framework for maintainable, consistent UI design extensions."),
            ("Markdown/PDF Export", "Formatted output of job profiles and sourcing reports ready for download."),
            ("i18n via Dictionaries", "In-house extendable solution for fast internationalization switching."),
        ],
        "General public": [
            ("Streamlit", "Tool to quickly build modern websites for presenting and analyzing information."),
            ("Python 3.11", "A popular language often used for AI and data projects."),
            ("OpenAI API (GPT-4)", "Artificial intelligence helping to understand texts, suggest ideas, and answer questions dynamically."),
            ("FAISS + Langchain", "Smart search engine helping to quickly find relevant skills and tasks."),
            ("pypdf, docx2txt", "Uploads like PDFs are automatically read and prepared for further use."),
            ("st.session_state", "Keeps already entered information available throughout the process."),
            ("ESCO API", "Database of recognized occupations and competencies across Europe."),
            ("Tailwind CSS (planned)", "Future improvement for even better and consistent designs."),
            ("Markdown/PDF Export", "Allows exporting results as clear, easy-to-share files."),
            ("i18n via Dictionaries", "Switch easily between German and English without page reload."),
        ],
    },
}

# ---------------------------------------------------------------------------
# Layout
# ---------------------------------------------------------------------------
st.title("üõ†Ô∏è Technologischer √úberblick" if lang == "Deutsch" else "üõ†Ô∏è Technology Overview")

intro = (
    "Hier siehst du die wichtigsten Technologien und was sie f√ºr Vacalyser bewirken."
    if lang == "Deutsch"
    else "An overview of the key technologies driving Vacalyser."
)

st.markdown(intro)

for tech, desc in technology_info[lang][audience]:
    st.markdown(f"### üîπ {tech}\n{desc}")

st.divider()

footer = (
    "Diese Struktur erlaubt schnelles Weiterentwickeln, √ºbersichtliche Wartung und flexible Erweiterungen."
    if lang == "Deutsch"
    else "This structure enables fast development, easy maintenance, and flexible extension capabilities."
)

st.info(footer)
